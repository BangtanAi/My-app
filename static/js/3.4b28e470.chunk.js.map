{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","alt","message","likesCount","MyPosts","React","memo","console","log","postsElements","posts","map","p","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.4b28e470.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__35n8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__3CHke\",\"img\":\"Profile_img__3OcRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__8MeNl\",\"posts\":\"MyPosts_posts__1_f2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3C9o6\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let[editMode, setEditMode] = useState(false);\r\n    let[status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                 </div>\r\n                }\r\n\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur = {deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n         </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { updateStatus } from '../../../redux/profile-reducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div> */}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatusWithHooks status = {props.status} updateStatus = {props.updateStatus}/>\r\n                {/* <p>About me: {props.profile.aboutMe}</p>\r\n                <p>instagram: {props.profile.contacts.instagram}</p>\r\n                <p>youtube: {props.profile.contacts.youtube}</p> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n          <div className = {s.item}>\r\n            <img src=\"https://peopletalk.ru/wp-content/uploads/2016/11/1480331127.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n              <span>{props.likesCount}</span>\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/FormsControls/FormsControl';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('RENDERRR');\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name ='newPostText' component ={Textarea} placeholder ='Post message'\r\n                validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {   \r\n    return (\r\n      <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentDidMount(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n   }\r\n  \r\n   render(){\r\n     return (\r\n       <Profile {...this.props} profile={this.props.profile}\r\n       status={this.props.status} updateStatus={this.props.updateStatus} />\r\n     )\r\n   }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}