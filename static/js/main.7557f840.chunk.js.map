{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","components/Users/users.module.css","hoc/withAuthRedirect.js","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","assets/images/user-image.png","components/Users/User.jsx","components/Users/Users.jsx","redux/user-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.js","App.js","index.js","components/common/FormsControls/FormsControl.module.css","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControl.js","components/common/Paginator/Paginator.module.css","utils/validators/validator.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","filter","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","className","s","nav","item","activeClassName","activeLink","active","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Preloader","followSuccess","unfollowSuccess","page","items","totalCount","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","validate","required","placeholder","component","Input","error","style","formSummaryError","length","stopSubmit","_error","formData","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","fallback","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","backgroundColor","preloader","Textarea","input","meta","hasError","touched","formControl","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.7557f840.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {       \r\n        case SEND_MESSAGE: \r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };       \r\n        default:\r\n            return state;     \r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '002d8c12-7d92-45d9-a62f-6a35ff500bbf'\r\n      }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize=10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    .then(response => {\r\n        return response.data;\r\n    });\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please use profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1rchg\",\"selectedPage\":\"users_selectedPage__JR02k\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__24h1n\",\"item\":\"Navbar_item__3MPRk\",\"activeLink\":\"Navbar_activeLink__DKQ9A\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    \r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 6,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n            })\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {...state,\r\n                 followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id=>id !== action.userId)\r\n             }\r\n        }\r\n        default: \r\n            return state;\r\n }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId)=>({type: UNFOLLOW, userId})\r\nexport const setUsers = (users)=>({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n          });\r\n      }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n                usersAPI.follow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode === 0){\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n      }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n                usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if(response.data.resultCode === 0){\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n      }\r\n}\r\n\r\nexport default usersReducer;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n                }\r\n        default: \r\n            return state;\r\n            }      \r\n }\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth} })\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me().then(response => {\r\n        if(response.data.resultCode === 0){\r\n            let{id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    });\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe).then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n    });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout().then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS: \r\n            return {\r\n                ...state,\r\n                initialized: true\r\n                }\r\n        default: \r\n            return state;\r\n            }      \r\n }\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });     \r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport profileReducer from './profile-reducer.js';\r\nimport dialogsReducer from './dialogs-reducer.js';\r\nimport sidebarReducer from './sidebar-reducer.js';\r\nimport usersReducer from './users-reducer.js';\r\nimport authReducer from './auth-reducer.js';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from './app-reducer.js';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n// import React from 'react';\r\n// import { NavLink } from 'react-router-dom';\r\n// import s from './Navbar.module.css';\r\n\r\n// // let s = {\r\n// //   'nav': 'Navbar_nav__3oxgY',\r\n// //   'item': 'Navbar_item__330ta',\r\n//     //  'active': 'bdhbhbffj'\r\n// // }\r\n\r\n// let c1 = 'item';\r\n// let c2 = 'active';\r\n// let classes = c1 + ' ' + c2;\r\n// let classesNew = `${s.item} ${c2}`;\r\n\r\n\r\n// const Navbar = () => {\r\n//     return (\r\n//       <nav className = {s.nav}>\r\n//       <div className = {s.item}>\r\n//         <NavLink to = '/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n//       </div>\r\n//       <div className = {`${s.item} ${s.active}`}>\r\n//         <NavLink to = '/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n//       </div>\r\n//       <div className = {s.item}>\r\n//         <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n//       </div>\r\n//       <div className = {s.item}>\r\n//         <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n//       </div>\r\n//     </nav>\r\n//     )\r\n// }\r\n\r\n// export default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user-image.ab7efdc7.png\";","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from '../../assets/images/user-image.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n       <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n  return <div>\r\n    <Paginator currentPage={currentPage} onPageChanged={onPageChanged} \r\n    totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n    <div>\r\n      {\r\n        users.map(u => <User user={u}\r\n                             followingInProgress={props.followingInProgress}\r\n                             key={u.id}\r\n                             unfollow={props.unfollow}\r\n                             follow={props.unfollow} />)\r\n      }\r\n    </div>\r\n  </div>\r\n  \r\n}\r\n\r\n\r\nexport default Users;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users)=> {\r\n        return users.filter(u=>true);\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from '../../redux/user-selector';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount(){\r\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.requestUsers(pageNumber, this.props.pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n    {this.props.isFetching ? <Preloader /> : null}\r\n    <Users totalUsersCount={this.props.totalUsersCount}\r\n                  pageSize={this.props.pageSize} \r\n                  currentPage={this.props.currentPage} \r\n                  onPageChanged={this.onPageChanged}\r\n                  users={this.props.users}\r\n                  follow={this.props.follow}\r\n                  unfollow={this.props.unfollow}\r\n                  toggleFollowingProgress= {this.props.toggleFollowingProgress}\r\n                  followingInProgress={this.props.followingInProgress}\r\n    />\r\n    </>\r\n}}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//       users: state.usersPage.users,\r\n//       pageSize: state.usersPage.pageSize,\r\n//       totalUsersCount: state.usersPage.totalUsersCount,\r\n//       currentPage: state.usersPage.currentPage,\r\n//       isFetching: state.usersPage.isFetching,\r\n//       followingInProgress: state.usersPage.followingInProgress\r\n//   }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n}\r\n}\r\n\r\nexport default compose(\r\n  // withAuthRedirect,\r\n  connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\r\n)(UsersContainer)\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth ? \r\n            <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>  \r\n            : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport axios from 'axios';\r\nimport { authAPI } from '../../api/api';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render(){\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n \r\nexport default connect(mapStateToProps, {logout})(HeaderContainer) ;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { required } from '../../utils/validators/validator';\r\nimport { Input } from '../common/FormsControls/FormsControl';\r\nimport style from './../common/FormsControls/FormsControl.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[required]} placeholder={'Email'} name={'email'} component={Input} />\r\n        </div>\r\n        <div>\r\n            <Field validate={[required]} placeholder={'Password'} name={'password'} component={Input} type={'password'} />\r\n        </div>\r\n        <div>\r\n            <Field type = {'checkbox'} name={'rememberMe'} component={Input} /> remember me\r\n        </div>\r\n        { props.error && <div className={style.formSummaryError}>\r\n            {props.error}\r\n         </div>\r\n        }\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, { Suspense } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport {initializeApp} from '..//src/redux/app-reducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n    componentDidMount(){\n       this.props.initializeApp();\n       }\n    render(){\n       if(!this.props.initialized){\n              return <Preloader />\n       }\n       return (\n              <div className='app-wrapper'>\n                  <HeaderContainer />\n                  <Navbar />\n                  <div className='app-wrapper-content'>\n                      <Route path='/dialogs'\n                             render={ () => {\n                                    return <Suspense fallback={<Preloader />}>\n                                    <DialogsContainer />\n                                  </Suspense>\n                             } } />\n  \n                      <Route path='/profile/:userId?'\n                             render={ () => {\n                                   return <Suspense fallback={<Preloader />}>\n                                   <ProfileContainer />\n                                 </Suspense>\n                            } } />\n  \n                      <Route path='/users'\n                             render={ () => <UsersContainer /> }/>\n  \n                      <Route path='/login'\n                             render={ () => <Login /> }/>\n          \n                  </div>\n              </div>\n          )\n    }   \n    \n}\n\nconst mapStateToProps = (state) => ({\n       initialized: state.app.initialized\n})\nlet AppContainer = compose(\n       withRouter,\n       connect(mapStateToProps, {initializeApp}))(App) ;\n\nconst SamuraiJSApp = (props) => {\n       return <BrowserRouter basename={ process.env.PUBLIC_URL}>\n       <Provider store={store} >\n           <AppContainer />\n       </Provider>\n   </BrowserRouter>\n}\nexport default SamuraiJSApp;\n\n\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport SamuraiJSApp from './App';\n\n    ReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n\nreportWebVitals();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__QhKPi\",\"error\":\"FormsControl_error__iW6g6\",\"formSummaryError\":\"FormsControl_formSummaryError__3KzOy\"};","export default __webpack_public_path__ + \"static/media/preloader.7860e7c9.svg\";","import preloader from '../../../assets/images/preloader.svg'; \r\nlet Preloader = (props) => {\r\n    return <div style = {{backgroundColor: 'white'}} >\r\n        <img src = {preloader}/>\r\n    </div>\r\n    \r\n}\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './FormsControl.module.css'\r\n\r\nexport const Textarea =({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n             </div>\r\n             {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport const Input =({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n             </div>\r\n             {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n        \r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3pFsc\",\"pageNumber\":\"Paginator_pageNumber__2B9_Y\",\"selectedPage\":\"Paginator_selectedPage__2I_ky\"};","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1LQfd\",\"loginBlock\":\"Header_loginBlock__3DEc0\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n            \r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n      });\r\n}\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n        dispatch(setStatus(response.data));\r\n      });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setStatus(status));\r\n        }\r\n      });\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}